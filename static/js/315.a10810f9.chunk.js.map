{"version":3,"file":"static/js/315.a10810f9.chunk.js","mappings":"6LAEA,MAqBA,EArBiBA,IACf,MAAOC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,OAC1BC,EAAWC,IAAgBF,EAAAA,EAAAA,WAAS,IACpCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,MAgBnC,OAdAK,EAAAA,EAAAA,YAAU,KAYJR,GAXcS,WAChB,IACEJ,GAAa,GACb,MAAM,KAAEJ,SAAeS,EAAAA,EAAAA,IAAUV,GACjCE,EAAQD,EAKV,CAJE,MAAOK,GACPC,EAASD,EACX,CAAC,QACCD,GAAa,EACf,GAEOM,EAAW,GACnB,CAACX,IACG,CAAEC,OAAMG,YAAWE,QAAO,ECpBnC,GAAgB,cAAgB,4BAA4B,SAAW,uBAAuB,UAAY,wBAAwB,SAAW,uBAAuB,cAAgB,4BAA4B,QAAU,uB,aCG1N,MAmCA,EAnCaM,KACX,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACdd,EAAG,sCAAAe,OAAyCF,EAAO,sDACnD,KAAEZ,EAAI,UAAEG,EAAS,MAAEE,GAAUU,EAAShB,GAC5C,OACEiB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,CACGZ,IAASa,EAAAA,EAAAA,KAAA,OAAAD,SAAMZ,EAAMc,UACrBhB,IAAae,EAAAA,EAAAA,KAAA,OAAAD,SAAK,eAClBjB,IACEA,EAAKoB,KAAKC,OAAS,GAClBH,EAAAA,EAAAA,KAAA,OAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAII,UAAWC,EAAAA,SAAaN,SACzBjB,EAAKoB,KAAKI,KAAIJ,IACbJ,EAAAA,EAAAA,MAAA,MAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAKG,EAAKK,QACVP,EAAAA,EAAAA,KAAA,KAAAD,SAAIG,EAAKM,YACRN,EAAKO,cACJT,EAAAA,EAAAA,KAAA,OACEU,IAAG,kCAAAd,OAAoCM,EAAKO,cAC5CE,IAAI,MAGNX,EAAAA,EAAAA,KAAA,KAAAD,SAAG,eATEG,EAAKU,WAgBpBZ,EAAAA,EAAAA,KAAA,OAAAD,SAAK,mBAEL,C","sources":["hooks/useFetch.jsx","webpack://goit-react-hw-05-movies/./src/components/cast.module.css?956f","components/cast.jsx"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nconst useFetch = url => {\n  const [data, setData] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const { data } = await axios.get(url);\n        setData(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    if (url) fetchData();\n  }, [url]);\n  return { data, isLoading, error };\n};\nexport default useFetch;\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"cast_castContainer__VTU8k\",\"castItem\":\"cast_castItem__cPmgH\",\"castImage\":\"cast_castImage__o-Trs\",\"castName\":\"cast_castName__7Ax2x\",\"castCharacter\":\"cast_castCharacter__o2Wvp\",\"noPhoto\":\"cast_noPhoto__D9m5s\"};","import { useParams } from 'react-router-dom';\nimport useFetch from 'hooks/useFetch';\nimport css from './cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=492aa469db167d08ffbb05ac7fdafe78`;\n  const { data, isLoading, error } = useFetch(url);\n  return (\n    <div>\n      {error && <div>{error.message}</div>}\n      {isLoading && <div>Loading...</div>}\n      {data &&\n        (data.cast.length > 0 ? (\n          <div>\n            <ul className={css.castList}>\n              {data.cast.map(cast => (\n                <li key={cast.id}>\n                  <h3>{cast.name}</h3>\n                  <p>{cast.character}</p>\n                  {cast.profile_path ? (\n                    <img\n                      src={`https://image.tmdb.org/t/p/w200${cast.profile_path}`}\n                      alt=\"\"\n                    />\n                  ) : (\n                    <p>No photo</p>\n                  )}\n                </li>\n              ))}\n            </ul>\n          </div>\n        ) : (\n          <div>No cast yet</div>\n        ))}\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["url","data","setData","useState","isLoading","setIsLoading","error","setError","useEffect","async","axios","fetchData","Cast","movieId","useParams","concat","useFetch","_jsxs","children","_jsx","message","cast","length","className","css","map","name","character","profile_path","src","alt","id"],"sourceRoot":""}